apiVersion: batch/v1
kind: Job
metadata:
  name: shopkartapi-publish-v2
  namespace: shopkart
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/sync-wave: "20"
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  backoffLimit: 1
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: apictl
          image: bitnami/git:2.45.2  # Has Git, Curl, Tar, CA Certs pre-installed
          env:
            - name: REPO_URL
              value: "https://github.com/Tharanidk/ShopKart.git"
            - name: API_SUBPATH
              value: "prod/ShopKartAPI"
            - name: REVISION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['argocd.argoproj.io/revision']
            - name: APIM_HOST
              valueFrom:
                secretKeyRef:
                  name: apim-prod-credentials
                  key: APIM_HOST
            - name: APIM_USER
              valueFrom:
                secretKeyRef:
                  name: apim-prod-credentials
                  key: APIM_USER
            - name: APIM_PASS
              valueFrom:
                secretKeyRef:
                  name: apim-prod-credentials
                  key: APIM_PASS
          command: ["/bin/bash", "-lc"]
          args:
            - |
              set -euo pipefail

              export HOME=/tmp/apictl-home
              mkdir -p /workspace /tmp/bin "$HOME"

              echo "==> Install apictl"
              APICTL_VERSION=4.5.0
              ARCH="$(uname -m)"
              case "$ARCH" in
                x86_64|amd64) APICTL_TARBALL="apictl-${APICTL_VERSION}-linux-amd64.tar.gz" ;;
                aarch64|arm64) APICTL_TARBALL="apictl-${APICTL_VERSION}-linux-arm64.tar.gz" ;;
                *) echo "Unsupported architecture: $ARCH"; exit 1 ;;
              esac
              curl -L -o /tmp/apictl.tgz "https://github.com/wso2/product-apim-tooling/releases/download/v${APICTL_VERSION}/${APICTL_TARBALL}"
              tar -xzf /tmp/apictl.tgz -C /tmp/bin --strip-components=1 apictl/apictl
              chmod +x /tmp/bin/apictl
              export PATH="/tmp/bin:$PATH"
              apictl version

              echo "==> Fetching repo at ArgoCD revision: ${REVISION:-HEAD}"
              git init /workspace/repo
              cd /workspace/repo
              git remote add origin "$REPO_URL"
              if [ -n "${REVISION:-}" ]; then
                git fetch --depth 1 origin "$REVISION"
                git checkout --detach FETCH_HEAD
              else
                git fetch --depth 1 origin HEAD
                git checkout --detach FETCH_HEAD
              fi
              cd "/workspace/repo/${API_SUBPATH}"

              echo "==> Login to PROD"
              apictl add env prod --apim "https://${APIM_HOST}" || true
              apictl login prod -u "${APIM_USER}" -p "${APIM_PASS}" --insecure

              echo "==> Import/Update API to PROD from $(pwd)"
              apictl import api -f . -e prod --preserve-provider=false --update --insecure

              echo "Import to PROD completed."
